spring:
  application:
    name: taco-cloud
  datasource:
    generate-unique-name: false
    name: tacocloud
  data:
    rest:
      base-path: /data-api
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9000/oauth2/jwks
  kafka:
    bootstrap-servers:
      - localhost:9092
    template:
      default-topic: tacocloud.orders.topic
    consumer:
      group-id: test-consumer-group
    producer:
      keySerializer: org.springframework.kafka.support.serializer.JsonSerializer
      valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer
  boot:
    admin:
      client:
        url: http://localhost:9090
        instance:
          management-base-url: http://localhost:8081
taco:
  orders:
    pageSize: 5
logging:
  level:
    tacocloud: DEBUG
tacocloud:
  api:
    url: http://localhost:8081/api/orders/fromEmail
  email:
    host: localhost:3143
    mailbox: INBOX
    password: password
    poll-rate: 10000
    username: to
server:
  port: 8081
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: '*'
        exclude: threaddump,heapdump
  endpoint:
    health:
      show-details: always
  info:
    git:
      mode: full
info:
  contact:
    email: alejandromatiz87@gmail.com
    phone: 3205053453
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://localhost/tacocloud
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: create-drop
logging:
  level:
    tacocloud: WARN