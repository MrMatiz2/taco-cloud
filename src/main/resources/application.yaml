spring:
  application:
    name: taco-cloud
  datasource:
    generate-unique-name: false
    name: tacocloud
  data:
    rest:
      base-path: /data-api
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9000/oauth2/jwks
  kafka:
    bootstrap-servers:
      - localhost:9092
    template:
      default-topic: tacocloud.orders.topic
    consumer:
      group-id: test-consumer-group
    producer:
      keySerializer: org.springframework.kafka.support.serializer.JsonSerializer
      valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer
taco:
  orders:
    pageSize: 5
logging:
  level:
    tacocloud: DEBUG
tacocloud:
  api:
    url: http://localhost:8080/orders/fromEmail
  email:
    host:
    mailbox:
    password:
    poll-rate:
    username:
---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://localhost/tacocloud
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: create-drop
logging:
  level:
    tacocloud: WARN